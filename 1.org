Задание 2. 
Создать класс Пароль. Поле класса – пароль. Метод класса – проверка пароля с выводом информационного сообщения: «Пароль верный» или «Пароль неверный». Для простоты пароль будет задаваться программистом в основной программе. Создать класс Надежный пароль, который является потомком класса Пароль и имеет собственный метод анализа надежности пароля: 
- Пароль должен состоять не менее чем из 8 символов(слабый)
- Пароль должен содержать как маленькие, так и большие латинские буквы(средний)
- Пароль должен содержать хотя бы одну цифру(хороший)
- Пароль должен содержать хотя бы один символ(!, $, #, %)(надежный)
В основной программе:
1) подключить модуль с описанными классами;
2) разместить на форме текстовое поле для ввода пароля;
3) в обработчике события кнопки Проверка реализовать работу с созданными классами.
Усложнение. Создать класс Шифр – наследник класса Пароль. Методы класса – Шифрование и Дешифрование пароля с использованием «Шифра Цезаря».

Шифр Цезаря, также известный как шифр сдвига, код Цезаря или сдвиг Цезаря — один из самых простых и наиболее широко известных методов шифрования.

Шифр Цезаря — это вид шифра подстановки, в котором каждый символ в открытом тексте заменяется символом, находящимся на некотором постоянном числе позиций левее или правее него в алфавите. Например, в шифре со сдвигом вправо на 3, А была бы заменена на Г, Б станет Д, и так далее.

В основной программе реализовать следующие функции с использованием класса Шифр:
1) В текстовое поле вводится пароль для шифрования и в зашифрованном виде записывается в текстовый файл.
2) Перед проверкой пароля его необходимо считать из файла и дешифровать.


Код:

- Библиотека PasswordLibrary

  - Password.cs (Класс пароль)
  
    #+INCLUDE: ./PasswordLibrary/Password.cs src c++

  - PasswordType.cs (перечисление типов паролей)
    
    #+INCLUDE: ./PasswordLibrary/PasswordType.cs src c++

  - StrongPassword.cs (определение вида пароля)

    #+INCLUDE: ./PasswordLibrary/StrongPassword.cs src c++

  - EncryptPassword.cs (шифрование пароля)

    #+INCLUDE: ./PasswordLibrary/EncryptPassword.cs src c++

- Тестирование (TestPassword)

  - UnitTest1.cs 

    #+INCLUDE: ./TestPassword/UnitTest1.cs src c++

- Приложение с графическим интерфейсом (PasswordC)

  - MainWindow.xaml (Разметка)

    #+INCLUDE: ./PasswordC/MainWindow.xaml src xml

  - MainWindow.xaml.cs (Код)
    
    #+INCLUDE: ./PasswordC/MainWindow.xaml.cs src xml

  - PasswordViewModel.cs (Логика приложения (ViewModel))

    #+INCLUDE: ./PasswordC/PasswordViewModel.cs src c++


Результаты работы приложения:

- Тестирование:

  [[./1.jpg]]

- Приложение с граф. интерфейсом

  [[./2.jpg]]

  [[./3.jpg]]

  [[./4.jpg]]

  [[./5.jpg]]

  [[./6.jpg]]

  [[./7.jpg]]

  [[./8.jpg]]

  [[./9.jpg]]

  [[./10.jpg]]

  [[./11.jpg]]

  
